// 文とは、なんらかの動作をして値を返さない命令です。 式は結果値に評価されます
// 関数定義: 文。関数/マクロ呼び出し: 式。新しいスコープを作る際に使用するブロック({})も式
// 式は終端にセミコロンを含みません。式の終端にセミコロンを付けたら、文に変えてしまいます
// Rustは、式指向言語
// 関数本体は、文が並び、最後に式を置くか文を置くという形で形成されます
// returnキーワードで関数から早期リターンし、値を指定することもできますが、多くの関数は最後の式を暗黙的に返します

fn main() {
    // {}のブロックは4に評価される式である
    let y = {
        let x = 3;
        x + 1
    };
    println!("The value of y is: {}", y);

    let a = plus_one(5);
    println!("{}", a);
}

fn plus_one(x: i32) -> i32 {
    x + 1
}
